// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'item.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Item _$ItemFromJson(Map<String, dynamic> json) => Item(
      name: json['Name'] as String?,
      genericName: json['GenericName'],
      code: json['Code'] as String?,
      companyName: json['CompanyName'],
      itemTypeId: json['ItemTypeId'],
      medicalTypeId: json['MedicalTypeId'],
      itemSpecimentId: json['ItemSpecimentId'],
      itemCategoryId: json['ItemCategoryId'],
      itemSubCategoryId: json['ItemSubCategoryId'],
      itemGroupCategoryId: json['ItemGroupCategoryId'],
      itemSubGroupCategoryId: json['ItemSubGroupCategoryId'],
      supplierOrVendorId: json['SupplierOrVendorId'],
      strength: json['Strength'],
      formulation: json['Formulation'],
      isAntibiotic: json['IsAntibiotic'] as bool?,
      medicineTypeId: json['MedicineTypeId'],
      isSurgeryItem: json['IsSurgeryItem'] as bool?,
      measurementUnitId: json['MeasurementUnitId'],
      salePrice: json['SalePrice'],
      buyPrice: json['BuyPrice'],
      serviceProviderId: json['ServiceProviderId'],
      referralAllowed: json['ReferralAllowed'] as bool?,
      description: json['Description'] as String?,
      defaultReferrarFee: json['DefaultReferrarFee'],
      labReportGroupId: json['LabReportGroupId'],
      nurseStationId: json['NurseStationId'],
      nurseStation: json['NurseStation'],
      taskTypeId: json['TaskTypeId'],
      taskType: json['TaskType'],
      labCountDay: json['LabCountDay'],
      isLabReportItem: json['IsLabReportItem'] as bool?,
      isActive: json['IsActive'] as bool?,
      createdDate: json['CreatedDate'] as String?,
      noEquipment: json['NoEquipment'] as bool?,
      isCustomTemplate: json['IsCustomTemplate'] as bool?,
      labItemSerialNo: json['LabItemSerialNo'],
      noDiscount: json['NoDiscount'] as bool?,
      shortCode: json['ShortCode'] as String?,
      isSlideRequired: json['IsSlideRequired'] as bool?,
      bedOccupancies: json['BedOccupancies'] as List<dynamic>?,
      inventories: json['Inventories'] as List<dynamic>?,
      itemItemGroup: json['Item_ItemGroup'] as List<dynamic>?,
      itemDefaults: json['ItemDefaults'] as List<dynamic>?,
      itemReorders: json['ItemReorders'] as List<dynamic>?,
      initialSetupItems: json['InitialSetupItems'] as List<dynamic>?,
      serviceProviderSurgeryPrices:
          json['ServiceProviderSurgeryPrices'] as List<dynamic>?,
      itemType: json['ItemType'],
      itemSpeciment: json['ItemSpeciment'] == null
          ? null
          : ItemSpeciment.fromJson(
              json['ItemSpeciment'] as Map<String, dynamic>),
      itemCategory: json['ItemCategory'] == null
          ? null
          : ItemCategory.fromJson(json['ItemCategory'] as Map<String, dynamic>),
      itemSubCategory: json['ItemSubCategory'],
      itemGroupCategory: json['ItemGroupCategory'],
      itemSubGroupCategory: json['ItemSubGroupCategory'],
      medicineType: json['MedicineType'],
      measurementUnit: json['MeasurementUnit'],
      medicalType: json['MedicalType'],
      serviceProvider: json['ServiceProvider'],
      labReportGroup: json['LabReportGroup'] == null
          ? null
          : LabReportGroup.fromJson(
              json['LabReportGroup'] as Map<String, dynamic>),
      supplierOrVendor: json['SupplierOrVendor'],
      packageDetails: json['PackageDetails'] as List<dynamic>?,
      patientServices: json['PatientServices'] as List<dynamic>?,
      receiptPayments: json['ReceiptPayments'] as List<dynamic>?,
      inventoryItem: json['InventoryItem'] as List<dynamic>?,
      itemRequisition: json['ItemRequisition'] as List<dynamic>?,
      itemSuplierOrVendors: json['Item_SuplierOrVendors'] as List<dynamic>?,
      itemwiseValues: json['ItemwiseValues'],
      expiryDate: json['ExpiryDate'] as String?,
      inventory: json['Inventory'],
      quantity: json['Quantity'],
      prescriptionItemId: json['PrescriptionItemId'],
      parentItemId: json['ParentItemId'],
      parentCategoryId: json['ParentCategoryId'],
      isSpecialItem: json['IsSpecialItem'] as bool?,
      groupFormatName: json['GroupFormatName'] as String?,
      branchId: json['BranchId'],
      branch: json['Branch'],
      tenantId: json['TenantId'],
      tenant: json['Tenant'],
      id: json['Id'],
      active: json['Active'] as bool?,
      userId: json['UserId'],
      hasErrors: json['HasErrors'] as bool?,
      errorCount: json['ErrorCount'],
      noErrors: json['NoErrors'] as bool?,
    );

Map<String, dynamic> _$ItemToJson(Item instance) => <String, dynamic>{
      'Name': instance.name,
      'GenericName': instance.genericName,
      'Code': instance.code,
      'CompanyName': instance.companyName,
      'ItemTypeId': instance.itemTypeId,
      'MedicalTypeId': instance.medicalTypeId,
      'ItemSpecimentId': instance.itemSpecimentId,
      'ItemCategoryId': instance.itemCategoryId,
      'ItemSubCategoryId': instance.itemSubCategoryId,
      'ItemGroupCategoryId': instance.itemGroupCategoryId,
      'ItemSubGroupCategoryId': instance.itemSubGroupCategoryId,
      'SupplierOrVendorId': instance.supplierOrVendorId,
      'Strength': instance.strength,
      'Formulation': instance.formulation,
      'IsAntibiotic': instance.isAntibiotic,
      'MedicineTypeId': instance.medicineTypeId,
      'IsSurgeryItem': instance.isSurgeryItem,
      'MeasurementUnitId': instance.measurementUnitId,
      'SalePrice': instance.salePrice,
      'BuyPrice': instance.buyPrice,
      'ServiceProviderId': instance.serviceProviderId,
      'ReferralAllowed': instance.referralAllowed,
      'Description': instance.description,
      'DefaultReferrarFee': instance.defaultReferrarFee,
      'LabReportGroupId': instance.labReportGroupId,
      'NurseStationId': instance.nurseStationId,
      'NurseStation': instance.nurseStation,
      'TaskTypeId': instance.taskTypeId,
      'TaskType': instance.taskType,
      'LabCountDay': instance.labCountDay,
      'IsLabReportItem': instance.isLabReportItem,
      'IsActive': instance.isActive,
      'CreatedDate': instance.createdDate,
      'NoEquipment': instance.noEquipment,
      'IsCustomTemplate': instance.isCustomTemplate,
      'LabItemSerialNo': instance.labItemSerialNo,
      'NoDiscount': instance.noDiscount,
      'ShortCode': instance.shortCode,
      'IsSlideRequired': instance.isSlideRequired,
      'BedOccupancies': instance.bedOccupancies,
      'Inventories': instance.inventories,
      'Item_ItemGroup': instance.itemItemGroup,
      'ItemDefaults': instance.itemDefaults,
      'ItemReorders': instance.itemReorders,
      'InitialSetupItems': instance.initialSetupItems,
      'ServiceProviderSurgeryPrices': instance.serviceProviderSurgeryPrices,
      'ItemType': instance.itemType,
      'ItemSpeciment': instance.itemSpeciment,
      'ItemCategory': instance.itemCategory,
      'ItemSubCategory': instance.itemSubCategory,
      'ItemGroupCategory': instance.itemGroupCategory,
      'ItemSubGroupCategory': instance.itemSubGroupCategory,
      'MedicineType': instance.medicineType,
      'MeasurementUnit': instance.measurementUnit,
      'MedicalType': instance.medicalType,
      'ServiceProvider': instance.serviceProvider,
      'LabReportGroup': instance.labReportGroup,
      'SupplierOrVendor': instance.supplierOrVendor,
      'PackageDetails': instance.packageDetails,
      'PatientServices': instance.patientServices,
      'ReceiptPayments': instance.receiptPayments,
      'InventoryItem': instance.inventoryItem,
      'ItemRequisition': instance.itemRequisition,
      'Item_SuplierOrVendors': instance.itemSuplierOrVendors,
      'ItemwiseValues': instance.itemwiseValues,
      'ExpiryDate': instance.expiryDate,
      'Inventory': instance.inventory,
      'Quantity': instance.quantity,
      'PrescriptionItemId': instance.prescriptionItemId,
      'ParentItemId': instance.parentItemId,
      'ParentCategoryId': instance.parentCategoryId,
      'IsSpecialItem': instance.isSpecialItem,
      'GroupFormatName': instance.groupFormatName,
      'BranchId': instance.branchId,
      'Branch': instance.branch,
      'TenantId': instance.tenantId,
      'Tenant': instance.tenant,
      'Id': instance.id,
      'Active': instance.active,
      'UserId': instance.userId,
      'HasErrors': instance.hasErrors,
      'ErrorCount': instance.errorCount,
      'NoErrors': instance.noErrors,
    };
